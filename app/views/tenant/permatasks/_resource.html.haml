%li{class: "dd-item dd3-item#{resource.id == @resource.id ? ' last-change' : ''}", data: {'resource-id' => resource.id}}
  - unless resource.task_type.downcase == 'answer' || resource.task_type.downcase == 'photo' || resource.task_type.downcase == 'comment'
    %span.dd-handle.dd3-handle.fa.fa-arrows Drag
  %div{class: "dd3-content #{resource.task_type.downcase}"}
    - if resource.task_type.downcase == 'answer'
      %span{class: resource.active ? 'active' : 'blocked', data: {'task-type' => resource.task_type}}= resource.name
    - else
      %span.editable{class: resource.active ? 'active' : 'blocked', data: {'task-type' => resource.task_type}}= resource.name
      - if resource.task_type.downcase == 'question'
        %i.glyphicon.icon-q
      - elsif resource.task_type.downcase == 'photo'
        %i.fa.fa-camera
      - elsif resource.task_type.downcase == 'comment'
        %i.fa.fa-comment
      - elsif resource.task_type.downcase == 'instructions'
        %i.fa.fa-info-circle
      .controls
        - unless Sortable::NESTING_RULES[resource.task_type].empty?
          - if resource.task_type.downcase == 'group'
            %a.btn.btn-default.preview{href: "#{ resource.class.to_s == "Tenant::Task" ? trial_tenant_task_path(resource, :format => :js) : trial_tenant_permatask_path(resource, :format => :js)}", rel: 'tooltip', title: 'Preview this Group', role: 'button', data: {'resource-id' => resource.id, 'remote' => true}}
              %i.fa.fa-eye

            %span.btn.btn-default.expand-group{data: {'resource-id' => resource.id} }
              %i.glyphicon.glyphicon-chevron-down{rel: 'tooltip', title: 'Expand this entire group'}
              
            %span.btn.btn-default.add-instructions{data: {'resource-type' => 'Instructions', 'resource-id' => resource.id}}
              %i.glyphicon.glyphicon-info-sign
            %span.btn.btn-default
              %i.fa.fa-th-large.add-node{data: {'resource-type' => 'Group', 'resource-id' => resource.id}}
            %span.btn.btn-default
              %i.glyphicon.icon-q.add-node{data: {'resource-type' => 'Question', 'resource-id' => resource.id}}
          - elsif resource.task_type.downcase == 'question'
            %a.btn.btn-default.toggle{data: {'toggle-condition' => 'Yes'}, 'href' => '#'} Yes
            %a.btn.btn-default.toggle{data: {'toggle-condition' => 'No'}, 'href' => '#'} No
            %a.btn.btn-default.toggle{data: {'toggle-condition' => 'N/A'}, 'href' => '#'} N/A
            %span.btn.btn-default
              %i.fa.fa-camera.add-node{data: {'resource-type' => 'Photo', 'resource-id' => resource.id}}
            %span.btn.btn-default
              %i.fa.fa-comment.add-node{data: {'resource-type' => 'Comment', 'resource-id' => resource.id}}
            %span.btn.btn-default.add-instructions{data: {'resource-type' => 'Instructions', 'resource-id' => resource.id}}
              %i.glyphicon.glyphicon-info-sign
            %span.btn.btn-default
              %i.glyphicon.icon-q.add-node{data: {'resource-type' => 'Question', 'resource-id' => resource.id}}
          - elsif resource.task_type.downcase == 'instructions'
            %span.btn.btn-default.add-node{data: {'resource-type' => 'Photo', 'resource-id' => resource.id}}
              %i.fa.fa-camera
            %span.btn.btn-default.add-node{data: {'resource-type' => 'Comment', 'resource-id' => resource.id}}
              %i.fa.fa-comment

        - unless resource.task_type.downcase == 'answer'
          = tenant_button :delete, url_for(controller: controller_name, action: :destroy, id: resource), method: :delete, remote: true, data: { confirm: 'Are you sure?' }
  %ol.dd-list
    - resource.children.each do |child|
      = render 'resource', resource: child
